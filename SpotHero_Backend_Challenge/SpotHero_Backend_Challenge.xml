<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpotHero_Backend_Challenge</name>
    </assembly>
    <members>
        <member name="T:SpotHero_Backend_Challenge.ParkingRateInstance">
            <summary>
            Represents an instance of an offered rate that encompasses less than or equal to 24 hours of parking time
            </summary>
            <remarks>
            As this is an offering in a specific time range, timezone is irrelevant here. 
            </remarks>
        </member>
        <member name="T:SpotHero_Backend_Challenge.Price">
            <summary>
            Represents the rate for a specific time slot.
            </summary>
            <remarks>Could be extended to specify currency</remarks>
        </member>
        <member name="T:SpotHero_Backend_Challenge.UnverifiedParkingRateInput">
            <summary>
            This class represents user input. It is not yet verified; for example, the data may contain typos or violations of business logic. 
            </summary>
            <remarks>
            The fundamental idea here is to represent unverified, external data. The external source might be an HTTP PUT, or it might be the 
            database. Just because the data is in the database does not mean it's valid. 
            </remarks>
        </member>
        <member name="P:SpotHero_Backend_Challenge.UnverifiedParkingRateInput.days">
            <summary>
            Comma-delimited list of days
            </summary>
            <remarks>Valid values: mon,tues,wed,thurs,fri,sat,sun (note non-standard</remarks>
        </member>
        <member name="P:SpotHero_Backend_Challenge.UnverifiedParkingRateInput.times">
            <summary>
            Times in "HHMM-HHMM" format
            </summary>
            <remarks>Example: 0900-1600 represents 9 AM to 4 PM</remarks>
        </member>
        <member name="P:SpotHero_Backend_Challenge.UnverifiedParkingRateInput.tz">
            <summary>
            Timezone in IANA format
            </summary>
        </member>
        <member name="P:SpotHero_Backend_Challenge.UnverifiedParkingRateInput.price">
            <summary>
            Price. Must be greater than zero.
            </summary>
        </member>
        <member name="M:SpotHero_Backend_Challenge.RateMatcher.GetPrice(System.DateTime,System.DateTime)">
            <summary>
            Given an input date range, retrieves rates from the database and looks for matches.
            </summary>
            <param name="start">requested start date for parking</param>
            <param name="end">requested end date for parking</param>
        </member>
        <member name="M:SpotHero_Backend_Challenge.RateMatcher.getRateInstances(System.DateTime)">
            <summary>
            
            </summary>
            <param name="startDate">requested start date for parking</param>
            <returns></returns>
        </member>
        <member name="T:SpotHero_Backend_Challenge.Retriever">
            <summary>
            Contains methods for maintaining rates in the database.
            </summary>
        </member>
        <member name="M:SpotHero_Backend_Challenge.Retriever.SeedRates">
            <summary>
            Seeds the database with rates provided in the challenge.
            </summary>
        </member>
    </members>
</doc>
